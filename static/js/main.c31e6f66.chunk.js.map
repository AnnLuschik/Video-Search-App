{"version":3,"sources":["components/Button/Button.jsx","components/Input/Input.jsx","YouTube/searchSlice.js","components/Header/Header.jsx","URLService.js","YouTube/components/Frame/Frame.jsx","YouTube/components/VideoItem/VideoItem.jsx","YouTube/YouTube.jsx","App.js","store/store.js","index.js"],"names":["StyledButton","styled","button","Button","onClick","children","restProps","Input","React","memo","onChange","value","onChangeHandler","useCallback","event","target","StyledInput","input","apiKey","youtubeSearchSlice","createSlice","name","initialState","searchParams","responseData","loading","loadingMore","errorMessage","reducers","getVideosRequest","state","action","payload","start","getVideosSuccess","getVideosFailure","getMoreVideosRequest","getMoreVideosSuccess","arr","nextArr","items","Array","from","Set","map","item","JSON","stringify","parse","getMoreVideosFailure","getVideoByIdRequest","getVideoByIdSuccess","getVideoByIdFailure","actions","Header","useState","setValue","dispatch","useDispatch","searchHandler","str","Boolean","URL","isValidUrl","videoId","exec","getVideoStartFromYoutubeUrl","a","fetch","response","json","data","message","error","fetchVideos","StyledHeader","StyledForm","onSubmit","e","preventDefault","id","placeholder","type","header","form","Frame","useSelector","youtube","title","src","width","height","frameBorder","allowFullScreen","VideoItem","setVideoId","kind","snippet","publishedAt","thumbnails","time","Date","toLocaleString","split","showVideo","decodedTitle","decode","Wrapper","Container","Preview","medium","url","alt","Details","Title","PublishedAt","dateTime","div","h3","img","YouTube","forwardRef","ref","pageInfo","StyledSection","totalResults","VideoContainer","total","LoaderDiv","NothingFound","section","props","p","App","useEffect","observer","IntersectionObserver","entries","isIntersecting","getState","nextPageToken","root","threshold","loader","current","observe","disconnect","useRef","Main","color","style","main","configureStore","reducer","youtubeSearchReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c31e6f66.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Button = ({ onClick, children, ...restProps }) => (\n  <StyledButton onClick={onClick} {...restProps}>{children}</StyledButton>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.string,\n};\n\nconst StyledButton = styled.button`\n  padding: 0.5em 1em;\n  font-size: 1em;\n  color: #FFFFFF;\n  text-transform: uppercase;\n  background-color: #F65263;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  \n  &:hover,\n  &:active {\n    background-color: #ec2f42;\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 5px rgba(0,0,0, 0.2);\n  }\n`;\n\nexport default Button;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Input = React.memo(({ onChange, value, ...restProps }) => {\n  const onChangeHandler = useCallback((event) => {\n    onChange(event.target.value);\n  }, [onChange]);\n\n  return <StyledInput value={value} onChange={onChangeHandler} {...restProps} />;\n});\n\nInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 10px 15px;\n  font-size: 14px;\n  color: #000000;\n  background-color: #FFFFFF;\n  border: 1px solid #aaa1a1;\n  border-radius: 5px;\n  outline: none;\n  opacity: 0.9;\n\n  &:focus {\n    box-shadow: 0 0 0 5px rgba(0,0,0, 0.2);\n  }\n`;\n\nexport default Input;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst apiKey = 'AIzaSyDgkvG57b0sI7NJ5sYG4-16W7aC3hjRet0';\n\nconst removeDuplicates = (arr, nextArr) => Array.from(new Set([...arr, ...nextArr]\n  .map((item) => JSON.stringify(item))))\n  .map((item) => JSON.parse(item));\n\nconst initialState = {\n  searchParams: null,\n  responseData: null,\n  loading: false,\n  loadingMore: false,\n  errorMessage: null,\n};\n\nexport const youtubeSearchSlice = createSlice({\n  name: 'youtubeSearch',\n  initialState,\n  reducers: {\n    getVideosRequest: (state, action) => {\n      state.loading = true;\n      state.errorMessage = null;\n      state.searchParams = {\n        value: action.payload,\n        start: '',\n      };\n    },\n    getVideosSuccess: (state, action) => {\n      state.responseData = action.payload;\n      state.loading = false;\n    },\n    getVideosFailure: (state, action) => {\n      state.loading = false;\n      state.errorMessage = action.payload;\n    },\n    getMoreVideosRequest: (state) => {\n      state.loadingMore = true;\n      state.errorMessage = null;\n    },\n    getMoreVideosSuccess: (state, action) => {\n      state.loadingMore = false;\n      // state.responseData = {\n      //   ...action.payload,\n      //   items: [...state.responseData.items, ...action.payload.items],\n      // };\n      state.responseData = {\n        ...action.payload,\n        items: removeDuplicates(state.responseData.items, action.payload.items),\n      };\n    },\n    getMoreVideosFailure: (state, action) => {\n      state.loadingMore = false;\n      state.errorMessage = action.payload;\n    },\n    getVideoByIdRequest: (state, action) => {\n      state.loading = true;\n      state.errorMessage = null;\n      state.searchParams = {\n        value: action.payload.value,\n        start: action.payload.start,\n      };\n    },\n    getVideoByIdSuccess: (state, action) => {\n      state.responseData = action.payload;\n      state.loading = false;\n    },\n    getVideoByIdFailure: (state, action) => {\n      state.loading = false;\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\nexport const {\n  getVideosRequest, getVideosSuccess, getVideosFailure,\n  getMoreVideosRequest, getMoreVideosSuccess, getMoreVideosFailure,\n  getVideoByIdRequest, getVideoByIdSuccess, getVideoByIdFailure,\n} = youtubeSearchSlice.actions;\n\nexport const youtubeSelector = (state) => state.youtubeSearch;\n\nexport function fetchVideos(payload) {\n  return async (dispatch) => {\n    dispatch(getVideosRequest(payload));\n\n    try {\n      const response = await fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${payload}&type=video&key=${apiKey}`);\n      const data = await response.json();\n      if (data.error) {\n        throw data.error;\n      }\n      dispatch(getVideosSuccess(data));\n    } catch (error) {\n      dispatch(getVideosFailure(error.message));\n    }\n  };\n}\n\nexport function fetchMoreVideos() {\n  return async (dispatch, getState) => {\n    dispatch(getMoreVideosRequest());\n\n    const { youtube: { searchParams: { value }, responseData: { nextPageToken } } } = getState();\n\n    try {\n      const response = await fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${value}&pageToken=${nextPageToken}&type=video&key=${apiKey}`);\n      const data = await response.json();\n\n      dispatch(getMoreVideosSuccess(data));\n    } catch (error) {\n      dispatch(getMoreVideosFailure(error));\n    }\n  };\n}\n\nexport function fetchVideoById(payload) {\n  return async (dispatch) => {\n    dispatch(getVideoByIdRequest(payload));\n\n    try {\n      const response = await fetch(`https://youtube.googleapis.com/youtube/v3/videos?part=snippet&id=${payload.value}&key=${apiKey}`);\n      const data = await response.json();\n      dispatch(getVideoByIdSuccess(data));\n    } catch (error) {\n      dispatch(getVideoByIdFailure(error.message));\n    }\n  };\n}\n\nexport default youtubeSearchSlice.reducer;\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport { fetchVideos, fetchVideoById } from '../../YouTube/searchSlice';\nimport { isValidUrl, getVideoIdFromYoutubeUrl, getVideoStartFromYoutubeUrl } from '../../URLService';\n\nexport const Header = () => {\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n\n  const searchHandler = useCallback(() => {\n    if (value) {\n      if (isValidUrl(value)) {\n        const videoId = getVideoIdFromYoutubeUrl(value);\n        const start = getVideoStartFromYoutubeUrl(value) || '';\n        dispatch(fetchVideoById({ value: videoId, start }));\n      } else {\n        dispatch(fetchVideos(value));\n      }\n    }\n  }, [dispatch, value]);\n\n  return (\n    <StyledHeader>\n      <StyledForm onSubmit={(e) => e.preventDefault()}>\n        <StyledInput id=\"search\" onChange={(e) => setValue(e)} value={value} placeholder=\"I'm searching...\" type=\"search\" />\n        <Button onClick={searchHandler}>Search</Button>\n      </StyledForm>\n    </StyledHeader>\n  );\n};\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 25px 0;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 50%;\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  margin-right: 10px;\n`;\n","export const isValidUrl = (str) => {\n  try {\n    return Boolean(new URL(str));\n  } catch {\n    return false;\n  }\n};\n\nexport const getVideoIdFromYoutubeUrl = (str) => {\n  const regex = /(?:youtube\\.com|youtu\\.).*(?:v=|v\\/|v%3D|vi(?:=|\\/)|watch\\?|embed\\/|\\/)([^&?%#\\/\\n]+)/gi;\n  return regex.exec(str)[1];\n};\n\nexport const getVideoStartFromYoutubeUrl = (str) => {\n  const regex = /(?:\\?t=|#t=|\\/t=)(\\d+)/gi;\n  return regex.exec(str)?.[1] || false;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Frame = React.memo(({ id }) => {\n  const { searchParams } = useSelector((state) => state.youtube);\n  return (\n    <iframe\n      title={id}\n      src={`https://www.youtube.com/embed/${id}?enablejsapi=1&start=${searchParams.start}&origin=https://annluschik.github.io/Video-Search-App/`}\n      width=\"340\"\n      height=\"190\"\n      frameBorder=\"0\"\n      allowFullScreen\n    />\n  );\n});\n\nFrame.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Frame;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { decode } from 'html-entities';\nimport { Frame } from '../Frame';\n\nconst VideoItem = React.memo(({ data }) => {\n  const [videoId, setVideoId] = useState('');\n  const { kind, id, snippet: { title, publishedAt, thumbnails } } = data;\n\n  const time = new Date(publishedAt).toLocaleString().split(',')[0];\n\n  const showVideo = useCallback(() => {\n    if (kind === 'youtube#searchResult') {\n      setVideoId(id.videoId);\n    } else setVideoId(id);\n  }, [kind, id]);\n\n  const decodedTitle = decode(title);\n\n  return (\n    <Wrapper>\n      <Container onClick={showVideo}>\n        {\n          videoId\n            ? <Frame id={videoId} />\n            : <Preview src={thumbnails.medium.url} alt={`Preview for ${decodedTitle}`} />\n        }\n        <Details>\n          <Title>{decodedTitle}</Title>\n          <PublishedAt dateTime={publishedAt}>{time}</PublishedAt>\n        </Details>\n      </Container>\n    </Wrapper>\n\n  );\n});\n\nVideoItem.propTypes = {\n  data: PropTypes.object,\n};\n\nconst Wrapper = styled.div`\n  max-width: 340px;\n  margin: 0 8px 40px;\n`;\n\nconst Container = styled.div`\n  cursor: pointer;\n`;\n\nconst Details = styled.div`\n  font-size: 12px;\n  padding-right: 12px;\n  &:focus {\n    box-shadow: 0 0 0 5px rgba(0,0,0, 0.2);\n  }\n`;\n\nconst Title = styled.h3`\n  margin: 12px 0 4px 0;\n  font-weight: 600;\n  font-size: 1.4em;\n`;\n\nconst PublishedAt = styled.time`\n  font-weight: 400;\n  font-size: 1.1em;\n`;\n\nconst Preview = styled.img`\n  cursor: pointer;\n`;\n\nexport default VideoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { VideoItem } from './components';\n\nconst YouTube = React.forwardRef(({ data }, ref) => {\n  const { pageInfo, items, kind } = data;\n\n  return (\n    <StyledSection>\n      {\n      pageInfo.totalResults\n        ? (\n          <VideoContainer total={pageInfo.totalResults}>\n            {items.map((item) => <VideoItem data={item} key={kind === 'youtube#searchListResponse' ? item.id.videoId : item.id} />)}\n            <LoaderDiv ref={ref} />\n          </VideoContainer>\n        )\n        : <NothingFound>Ничего не найдено.</NothingFound>\n    }\n    </StyledSection>\n  );\n});\n\nYouTube.propTypes = {\n  data: PropTypes.object,\n};\n\nconst StyledSection = styled.section`\n  padding: 25px 0;\n  background-color: #f9f9f9;\n`;\n\nconst VideoContainer = styled.div`\n  display: ${(props) => (props.total === 1 ? 'flex' : 'grid')};\n  grid-template-columns: repeat(auto-fill, 340px);\n  grid-gap: 24px;\n  justify-content: center;\n  width: 100%;\n  padding-top: 15px;\n`;\n\nconst LoaderDiv = styled.div`\n  width: 10px;\n  height: 2px;\n`;\n\nconst NothingFound = styled.p`\n  margin-top: 40px;\n  font-weight: 600;\n  font-size: 26px;\n  color: #000000;\n`;\n\nexport default YouTube;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { BarLoader } from 'react-spinners';\nimport { Header } from './components';\nimport { fetchMoreVideos, YouTube } from './YouTube';\n\nexport const App = () => {\n  const { responseData, loading, errorMessage } = useSelector((state) => state.youtube);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const options = {\n      root: null,\n      threshold: 0.5,\n    };\n\n    const handleObserver = (entries) => {\n      const target = entries[0];\n      if (target.isIntersecting) {\n        dispatch(fetchMoreVideos());\n      }\n    };\n\n    const observer = new IntersectionObserver(handleObserver, options);\n\n    if (responseData?.nextPageToken && loader.current) {\n      observer.observe(loader.current);\n    }\n\n    return () => observer.disconnect();\n  }, [dispatch, responseData]);\n\n  const loader = useRef(null);\n\n  return (\n    <Wrapper>\n      <Header />\n      <Main>\n        {loading ? <BarLoader color=\"#F65263\" width=\"100%\" height=\"5px\" /> : <div style={{ width: '100%', height: '5px' }} />}\n        {responseData ? <YouTube data={responseData} ref={loader} /> : null}\n        {errorMessage ? <p style={{ color: '#b40719' }}>{errorMessage}</p> : null }\n      </Main>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  max-width: 1440px;\n  margin: 0 auto;\n`;\n\nconst Main = styled.main`\n  width: 100%;\n`;\n","import { configureStore } from '@reduxjs/toolkit';\nimport youtubeSearchReducer from '../YouTube/searchSlice';\n\nexport default configureStore({\n  reducer: {\n    youtube: youtubeSearchReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}